# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI Workflow

on:
  # workflow_dispatch:

  push:
    tags:
      - "*.*.*"

jobs:
  verify-tags:
    uses: ./.github/workflows/verify-tags.yaml
    with:
      branch: ${{ github.ref_name }}
      tagName: ${{ github.ref_name }}

  unit-testing:
    uses: ./.github/workflows/unit-testing.yaml
    needs: [verify-tags]

  integration-testing:
    needs: [unit-testing]
    uses: ./.github/workflows/integration-testing.yaml
    with:
      branch: ${{ github.ref_name }}

  build-docker-image:
    needs: [integration-testing]
    uses: ./.github/workflows/build-docker-image.yaml
    with:
      branch: ${{ github.ref_name }}

  build-executable:
    needs: [integration-testing]
    uses: ./.github/workflows/build-executable.yaml
    with:
      branch: ${{ github.ref_name }}

  push-executable-to-s3:
    runs-on: ubuntu-latest
    needs: [build-executable]
    environment: PROD_ENV
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
    steps:
      - uses: actions/checkout@v4
      - name: Download a Build Artifact
        uses: actions/download-artifact@v5.0.0
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: artifact-build
          # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
          path: /tmp/executable # optional
      - name: Pushing executbale to S3
        run: |
          TAG_NAME=$(cat .ver)
          ls -al /tmp/executable
          BINARY_NAME=exporter-linux-$TAG_NAME
          echo "Uploading $BINARY_NAME to S3"
          CREDS=$(aws sts assume-role --role-arn ${{ vars.ASSUME_ROLE_ARN }} --role-session-name session)
          PROFILE="assumed-role"
          aws configure set aws_access_key_id     "$(echo $CREDS | jq -r '.Credentials.AccessKeyId')"     --profile $PROFILE
          aws configure set aws_secret_access_key "$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" --profile $PROFILE
          aws configure set aws_session_token     "$(echo $CREDS | jq -r '.Credentials.SessionToken')"    --profile $PROFILE
          aws s3 cp /tmp/executable/$BINARY_NAME s3://database-prometheus-exporter/binaries/$BINARY_NAME --profile $PROFILE
          echo "Executable deployed to S3"
